plugins {
    id 'java'
    // id 'com.github.johnrengelman.shadow' version '7.1.2'  // 暂时注释，网络问题
}

group = 'su'
version = '1.6-SNAPSHOT'

repositories {
    maven { 
        url 'https://maven.aliyun.com/repository/public' 
        allowInsecureProtocol = true
    }
    maven { 
        url 'https://maven.aliyun.com/repository/google' 
        allowInsecureProtocol = true
    }
    maven { 
        url 'https://maven.aliyun.com/repository/gradle-plugin' 
        allowInsecureProtocol = true
    }
    mavenLocal()
    mavenCentral()
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
        allowInsecureProtocol = true
    }
    maven {
        name = "spigot"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
        allowInsecureProtocol = true
    }
    maven {
        name = "sonatype-oss-snapshots"
        url = "https://oss.sonatype.org/content/repositories/snapshots/"
        allowInsecureProtocol = true
    }
    maven {
        name = "papermc"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
}

dependencies {
    compileOnly "org.spigotmc:spigot-api:1.12.2-R0.1-SNAPSHOT"
    implementation 'org.xerial:sqlite-jdbc:3.34.0'
    implementation 'mysql:mysql-connector-java:8.0.28'
    // implementation 'com.tcoded:FoliaLib:0.3.1'  // 暂时注释，网络问题
}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

// shadowJar {
//     relocate 'com.tcoded.folialib', 'su.kukecdk.libs.folialib'
//     archiveClassifier.set('')
// }

// build {
//     dependsOn shadowJar
// }